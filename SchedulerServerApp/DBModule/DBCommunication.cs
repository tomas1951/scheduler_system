using Npgsql;

namespace SchedulerServerApp.DBModule;

public class DBCommunication
{
    public NpgsqlDataSource DataSource { get; set; }

    public int TestID { get; set; }

    public DBCommunication(string host, string login, string pass, 
        string myDatabase)
    {
        string connString = $"Host={host};Username={login};" +
            $"Password={pass};Database={myDatabase}";

        try
        {
           DataSource = NpgsqlDataSource.Create(connString);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"DB exception: {ex.GetType()}, {ex.Message}");
        }

        TestID = 1;

        Console.WriteLine("DB connected.");
    }

    async public Task<List<string>> GetAllTasks()
    {
        await using var command = DataSource.CreateCommand("SELECT * FROM tasks");
        await using var reader = await command.ExecuteReaderAsync();

        // TODO - transform db into a list
        
        return new List<string>();
    }

    async public Task PrintAllTasks()
    {
        await using var command = DataSource.CreateCommand("SELECT * FROM tasks");
        await using var reader = await command.ExecuteReaderAsync();
        
        int counter = 0;
        while (reader.Read())
        {
            counter++;
            for (int i = 0; i < reader.FieldCount; i++)
            {
                Console.Write($"{reader.GetName(i)}: {reader[i]} ");

                //Console.Write($"{reader[i]}");
            }
            Console.WriteLine();  // New line for each row
        }
        //Console.WriteLine($"Number of records: {counter}");
    }

    //async public void TestCreateRandomTask()
    //{
    //    Console.WriteLine("Creating a task in database.");

    //    string id = TestID.ToString();
    //    TestID++;
    //    string name = "test_task";

    //    await using var command = DataSource.CreateCommand("INSERT INTO " +
    //        $"tasks (id, name) VALUES ({id}, '{name}');");
    //    await command.ExecuteNonQueryAsync();
    //}

    async public void TestCreateRandomTask() // for autogenerated id
    {
        Console.WriteLine("Creating a task in database.");

        //string id = TestID.ToString();
        //TestID++;
        string name = "test_task";

        //await using var command = DataSource.CreateCommand("INSERT INTO " +
        //    $"tasks (id, name) VALUES ({id}, '{name}');");
        await using var command = DataSource.CreateCommand("INSERT INTO " +
            $"tasks (name) VALUES ('{name}');");
        await command.ExecuteNonQueryAsync();
    }

    //public void TestGenerateTrainingTaskSet(int count)
    //{
    //    for (int i = 0; i <= count; i++)
    //    {
    //        string name = $"Task{i}";

    //    }
    //}
}
